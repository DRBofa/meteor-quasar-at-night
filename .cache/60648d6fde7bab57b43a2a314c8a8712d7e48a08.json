{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/bona/Desktop/Learn Vuejs Get start/Project/meteor+quasar (copy)/client/page/SearchItem.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/bona/Desktop/Learn Vuejs Get start/Project/meteor+quasar (copy)/client/page/SearchItem.vue","filename":"/home/bona/Desktop/Learn Vuejs Get start/Project/meteor+quasar (copy)/client/page/SearchItem.vue","passPerPreset":false,"envName":"development","cwd":"/home/bona/Desktop/Learn Vuejs Get start/Project/meteor+quasar (copy)","root":"/home/bona/Desktop/Learn Vuejs Get start/Project/meteor+quasar (copy)","generatorOpts":{"filename":"/home/bona/Desktop/Learn Vuejs Get start/Project/meteor+quasar (copy)/client/page/SearchItem.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/bona/Desktop/Learn Vuejs Get start/Project/meteor+quasar (copy)/client/page/SearchItem.vue"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nmodule.exportDefault({\n  data: function () {\n    return {\n      filter: \"\",\n      data: [],\n      original: [],\n      loading: false,\n      pagination: {\n        sortBy: \"name\",\n        descending: false,\n        page: 1,\n        rowsPerPage: 3,\n        rowsNumber: 10\n      },\n      columns: [{\n        name: \"name\",\n        align: \"left\",\n        label: \"Name\",\n        field: \"name\",\n        sortable: true,\n        field: function (row) {\n          return row.name;\n        },\n        format: function (val) {\n          return \"\" + val;\n        }\n      }, {\n        name: \"price\",\n        align: \"left\",\n        label: \"Price\",\n        field: \"price\",\n        sortable: true\n      }, {\n        name: \"cost\",\n        align: \"left\",\n        label: \"Cost\",\n        field: \"cost\",\n        sortable: true\n      }, {\n        name: \"memo\",\n        align: \"left\",\n        label: \"Memo\",\n        field: \"memo\",\n        sortable: true\n      }]\n    };\n  },\n  mounted: function () {\n    var _this = this;\n\n    Meteor.call(\"findItem\", function (err, result) {\n      if (result) {\n        _this.original = result;\n      }\n    }); // get initial data from server (1st page)\n\n    this.onRequest({\n      pagination: this.pagination,\n      filter: undefined\n    });\n  },\n  methods: {\n    onRequest: function (props) {\n      var _this2 = this;\n\n      var _props$pagination = props.pagination,\n          page = _props$pagination.page,\n          rowsPerPage = _props$pagination.rowsPerPage,\n          rowsNumber = _props$pagination.rowsNumber,\n          sortBy = _props$pagination.sortBy,\n          descending = _props$pagination.descending;\n      var filter = props.filter;\n      this.loading = true; // emulate server\n\n      setTimeout(function () {\n        var _this2$data;\n\n        // update rowsCount with appropriate value\n        _this2.pagination.rowsNumber = _this2.getRowsNumberCount(filter); // get all rows if \"All\" (0) is selected\n\n        var fetchCount = rowsPerPage === 0 ? rowsNumber : rowsPerPage; // calculate starting row of data\n\n        var startRow = (page - 1) * rowsPerPage; // fetch data from \"server\"\n\n        var returnedData = _this2.fetchFromServer(startRow, fetchCount, filter, sortBy, descending); // clear out existing data and add new\n\n\n        (_this2$data = _this2.data).splice.apply(_this2$data, [0, _this2.data.length].concat((0, _toConsumableArray2.default)(returnedData))); // don't forget to update local pagination object\n\n\n        _this2.pagination.page = page;\n        _this2.pagination.rowsPerPage = rowsPerPage;\n        _this2.pagination.sortBy = sortBy;\n        _this2.pagination.descending = descending; // ...and turn of loading indicator\n\n        _this2.loading = false;\n      }, 1500);\n    },\n    // emulate ajax call\n    // SELECT * FROM ... WHERE...LIMIT...\n    fetchFromServer: function (startRow, count, filter, sortBy, descending) {\n      var data = [];\n\n      if (!filter) {\n        data = this.original.slice(startRow, startRow + count);\n      } else {\n        var found = 0;\n\n        for (var index = startRow, items = 0; index < this.original.length && items < count; ++index) {\n          var row = this.original[index]; // match filter?\n\n          if (!row['name'].includes(filter)) {\n            // get a different row, until one is found\n            continue;\n          }\n\n          ++found;\n\n          if (found >= startRow) {\n            data.push(row);\n            ++items;\n          }\n        }\n      } // handle sortBy\n\n\n      if (sortBy) {\n        data.sort(function (a, b) {\n          var x = descending ? b : a;\n          var y = descending ? a : b;\n\n          if (sortBy === 'desc') {\n            // string sort\n            return x[sortBy] > y[sortBy] ? 1 : x[sortBy] < y[sortBy] ? -1 : 0;\n          } else {\n            // numeric sort\n            return parseFloat(x[sortBy]) - parseFloat(y[sortBy]);\n          }\n        });\n      }\n\n      return data;\n    },\n    // emulate 'SELECT count(*) FROM ...WHERE...'\n    getRowsNumberCount: function (filter) {\n      if (!filter) {\n        return this.original.length;\n      }\n\n      var count = 0;\n      this.original.forEach(function (treat) {\n        if (treat['name'].includes(filter)) {\n          ++count;\n        }\n      });\n      return count;\n    }\n  }\n});","map":{"version":3,"sources":["/home/bona/Desktop/Learn Vuejs Get start/Project/meteor+quasar (copy)/client/page/SearchItem.vue"],"names":["module","exportDefault","data","filter","original","loading","pagination","sortBy","descending","page","rowsPerPage","rowsNumber","columns","name","align","label","field","sortable","row","format","val","mounted","Meteor","call","err","result","onRequest","undefined","methods","props","setTimeout","getRowsNumberCount","fetchCount","startRow","returnedData","fetchFromServer","splice","length","count","slice","found","index","items","includes","push","sort","a","b","x","y","parseFloat","forEach","treat"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      filter: \"\",\n      data:[],\n      original:[],\n      loading: false,\n      pagination: {\n        sortBy: \"name\",\n        descending: false,\n        page: 1,\n        rowsPerPage: 3,\n        rowsNumber: 10\n      },\n       columns: [\n        {\n            name: \"name\",\n          align: \"left\",\n          label: \"Name\",\n          field: \"name\",\n          sortable: true,\n            field: row => row.name,\n          format: val => `${val}`,\n        },\n        {\n          name: \"price\",\n          align: \"left\",\n          label: \"Price\",\n          field: \"price\",\n          sortable: true\n        },\n        {\n          name: \"cost\",\n          align: \"left\",\n          label: \"Cost\",\n          field: \"cost\",\n          sortable: true\n        },\n        {\n          name: \"memo\",\n          align: \"left\",\n          label: \"Memo\",\n          field: \"memo\",\n          sortable: true\n        }\n      ]\n    };\n  },\n mounted () {\n     Meteor.call(\"findItem\", (err, result) => {\n        if (result) {\n          this.original = result;\n        }\n      });\n    // get initial data from server (1st page)\n    this.onRequest({\n      pagination: this.pagination,\n      filter: undefined\n    })\n  },\n  methods: {\n    onRequest (props) {\n      let { page, rowsPerPage, rowsNumber, sortBy, descending } = props.pagination\n      let filter = props.filter\n\n      this.loading = true\n\n      // emulate server\n      setTimeout(() => {\n        // update rowsCount with appropriate value\n        this.pagination.rowsNumber = this.getRowsNumberCount(filter)\n\n        // get all rows if \"All\" (0) is selected\n        let fetchCount = rowsPerPage === 0 ? rowsNumber : rowsPerPage\n\n        // calculate starting row of data\n        let startRow = (page - 1) * rowsPerPage\n\n        // fetch data from \"server\"\n        let returnedData = this.fetchFromServer(startRow, fetchCount, filter, sortBy, descending)\n\n        // clear out existing data and add new\n        this.data.splice(0, this.data.length, ...returnedData)\n\n        // don't forget to update local pagination object\n        this.pagination.page = page\n        this.pagination.rowsPerPage = rowsPerPage\n        this.pagination.sortBy = sortBy\n        this.pagination.descending = descending\n\n        // ...and turn of loading indicator\n        this.loading = false\n      }, 1500)\n    },\n\n    // emulate ajax call\n    // SELECT * FROM ... WHERE...LIMIT...\n    fetchFromServer (startRow, count, filter, sortBy, descending) {\n      let data = []\n\n      if (!filter) {\n        data = this.original.slice(startRow, startRow + count)\n      }\n      else {\n        let found = 0\n        for (let index = startRow, items = 0; index < this.original.length && items < count; ++index) {\n          let row = this.original[index]\n          // match filter?\n          if (!row['name'].includes(filter)) {\n            // get a different row, until one is found\n            continue\n          }\n          ++found\n          if (found >= startRow) {\n            data.push(row)\n            ++items\n          }\n        }\n      }\n\n      // handle sortBy\n      if (sortBy) {\n        data.sort((a, b) => {\n          let x = descending ? b : a\n          let y = descending ? a : b\n          if (sortBy === 'desc') {\n            // string sort\n            return x[sortBy] > y[sortBy] ? 1 : x[sortBy] < y[sortBy] ? -1 : 0\n          }\n          else {\n            // numeric sort\n            return parseFloat(x[sortBy]) - parseFloat(y[sortBy])\n          }\n        })\n      }\n\n      return data\n    },\n\n    // emulate 'SELECT count(*) FROM ...WHERE...'\n    getRowsNumberCount (filter) {\n      if (!filter) {\n        return this.original.length\n      }\n      let count = 0\n      this.original.forEach((treat) => {\n        if (treat['name'].includes(filter)) {\n          ++count\n        }\n      })\n      return count\n    }\n  }\n}\n"]},"sourceType":"script","hash":"60648d6fde7bab57b43a2a314c8a8712d7e48a08"}
